config CPU_INTEL_COMMON
	bool
	select RESERVED_PHYSICAL_ADDRESS_BITS_SUPPORT

if CPU_INTEL_COMMON

config ENABLE_VMX
	bool "Enable VMX for virtualization"
	default y

config SET_IA32_FC_LOCK_BIT
	bool "Set IA32_FEATURE_CONTROL lock bit"
	default y
	help
	  Although the Intel manual says you must set the lock bit in addition
	  to the VMX bit in order for VMX to work, this isn't strictly true, so
	  we have the option to leave it unlocked and allow the OS (e.g. Linux)
	  to manage things itself. This is beneficial for testing purposes as
	  there is no need to reflash the firmware just to toggle the lock bit.
	  However, leaving the lock bit unset will break Windows' detection of
	  VMX support and built-in virtualization features like Hyper-V.

config SET_MSR_AESNI_LOCK_BIT
	bool "Lock the AES-NI enablement state"
	default y
	help
	  This config sets the AES-NI lock bit, if available, to prevent any
	  further change of AES-NI enablement. This may be disabled for e.g.
	  testing or debugging.

config CPU_INTEL_COMMON_TIMEBASE
	bool

config CPU_INTEL_COMMON_RESERVED_PHYS_ADDR_BITS
	int
	help
	  Specify the number of physical address reserved bits.  This
	  config can be set for SoCs with reserved bits which cannot
	  be probed at runtime.  A runtime detection by hardware
	  probing will be attempted if the value is -1.

endif

config CPU_INTEL_COMMON_VOLTAGE
	bool

config CPU_INTEL_COMMON_SMM
	bool
	default y if CPU_INTEL_COMMON
